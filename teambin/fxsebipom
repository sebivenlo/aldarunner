#!/bin/bash

projectname=$(basename $(pwd))

cat - <<EOF > pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>nl.fontys.sebivenlo</groupId>
        <artifactId>sebipom</artifactId>
        <version>3.0.1</version>
        <relativePath/>
    </parent>
    <groupId>${projectname}</groupId>
    <artifactId>${projectname}</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <javafx.version>16</javafx.version>
        <exec.mainClass>${projectname}/${projectname}.Main</exec.mainClass>
    </properties>
    <profiles>
    <profile>
        <id>fx</id>
        <activation>
            <activeByDefault>true</activeByDefault>
        </activation>
    </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>\${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>\${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>
    </dependencies> 
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId> 
                <configuration>
                    <!-- add add-opens lines for **ALL** packages in your module that are tested.
                        For testing it is fine to open your packages for the whole world, which includes
                        e.g. junit, assertj, mockito, and jacoco, to name a few.
                        Also leave ${argLine} because it is set/used by the coverage plugin.
                    -->
                    <argLine> 
                        ${argLine}
                        --add-opens ${projectname}/${projectname}=ALL-UNNAMED 
                        --add-opens javafx.graphics/com.sun.javafx.application.ParametersImpl=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

EOF

mkdir -p src/{main,test}/{java,resources}/${projectname}
